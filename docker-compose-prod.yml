version: "3.9"
services:
  text-embeddings:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        PROJECT_DIR: "${PROJECT_DIR}"
    container_name: embeddings
    image: embeddings:dev
    restart: always
    environment:
      FLASK_APP: src/app.py
      FLASK_RUN_HOST: 0.0.0.0
      PROJECT_DIR: "${PROJECT_DIR}"
      REDIS_URL: "${REDIS_URL}"
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
      VIRTUAL_PORT: "${PORT_EMBEDDINGS}"
      LETSENCRYPT_HOST: "${VIRTUAL_HOST}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
    volumes:
      - ./:${PROJECT_DIR}
    networks:
      - proxy
      - app
    depends_on:
      - redis
    command: /bin/bash -c "chmod +x ${PROJECT_DIR}/scripts/* && ${PROJECT_DIR}/scripts/start.sh"
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    networks:
      - app
    volumes:
      - ./data/redis:${PROJECT_DIR}/data/redis:z
    ports:
      - "6379:6379"
    command: /bin/sh -c "mkdir -p ${PROJECT_DIR}/data/redis/appendonlydir && rm -f ${PROJECT_DIR}/data/redis/dump.rdb && redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes --dbfilename dump.rdb --dir ${PROJECT_DIR}/data/redis/"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  proxy:
    name: nginx-proxy
    external: true
  app:
